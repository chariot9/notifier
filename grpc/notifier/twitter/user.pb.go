// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notifier/src/twitter/user.proto

package twitter

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                             int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IdStr                          string   `protobuf:"bytes,2,opt,name=id_str,json=idStr,proto3" json:"id_str,omitempty"`
	Name                           string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ScreenName                     string   `protobuf:"bytes,4,opt,name=screen_name,json=screenName,proto3" json:"screen_name,omitempty"`
	Location                       string   `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Url                            string   `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Description                    string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	TranslatorType                 string   `protobuf:"bytes,8,opt,name=translator_type,json=translatorType,proto3" json:"translator_type,omitempty"`
	Protected                      bool     `protobuf:"varint,9,opt,name=protected,proto3" json:"protected,omitempty"`
	Verified                       bool     `protobuf:"varint,10,opt,name=verified,proto3" json:"verified,omitempty"`
	FollowersCount                 int32    `protobuf:"varint,11,opt,name=followers_count,json=followersCount,proto3" json:"followers_count,omitempty"`
	FriendsCount                   int32    `protobuf:"varint,12,opt,name=friends_count,json=friendsCount,proto3" json:"friends_count,omitempty"`
	ListedCount                    int32    `protobuf:"varint,13,opt,name=listed_count,json=listedCount,proto3" json:"listed_count,omitempty"`
	FavouritesCount                int32    `protobuf:"varint,14,opt,name=favourites_count,json=favouritesCount,proto3" json:"favourites_count,omitempty"`
	StatusesCount                  int32    `protobuf:"varint,15,opt,name=statuses_count,json=statusesCount,proto3" json:"statuses_count,omitempty"`
	CreatedAt                      string   `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UtcOffset                      string   `protobuf:"bytes,17,opt,name=utc_offset,json=utcOffset,proto3" json:"utc_offset,omitempty"`
	TimeZone                       string   `protobuf:"bytes,18,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	GeoEnabled                     bool     `protobuf:"varint,19,opt,name=geo_enabled,json=geoEnabled,proto3" json:"geo_enabled,omitempty"`
	Lang                           string   `protobuf:"bytes,20,opt,name=lang,proto3" json:"lang,omitempty"`
	ContributorsEnabled            bool     `protobuf:"varint,21,opt,name=contributors_enabled,json=contributorsEnabled,proto3" json:"contributors_enabled,omitempty"`
	IsTranslator                   bool     `protobuf:"varint,22,opt,name=is_translator,json=isTranslator,proto3" json:"is_translator,omitempty"`
	ProfileBackgroundColor         string   `protobuf:"bytes,23,opt,name=profile_background_color,json=profileBackgroundColor,proto3" json:"profile_background_color,omitempty"`
	ProfileBackgroundImageUrl      string   `protobuf:"bytes,24,opt,name=profile_background_image_url,json=profileBackgroundImageUrl,proto3" json:"profile_background_image_url,omitempty"`
	ProfileBackgroundImageUrlHttps string   `protobuf:"bytes,25,opt,name=profile_background_image_url_https,json=profileBackgroundImageUrlHttps,proto3" json:"profile_background_image_url_https,omitempty"`
	ProfileBackgroundTile          bool     `protobuf:"varint,26,opt,name=profile_background_tile,json=profileBackgroundTile,proto3" json:"profile_background_tile,omitempty"`
	ProfileLinkColor               string   `protobuf:"bytes,27,opt,name=profile_link_color,json=profileLinkColor,proto3" json:"profile_link_color,omitempty"`
	ProfileSidebarBorderColor      string   `protobuf:"bytes,28,opt,name=profile_sidebar_border_color,json=profileSidebarBorderColor,proto3" json:"profile_sidebar_border_color,omitempty"`
	ProfileSidebarFillColor        string   `protobuf:"bytes,29,opt,name=profile_sidebar_fill_color,json=profileSidebarFillColor,proto3" json:"profile_sidebar_fill_color,omitempty"`
	ProfileTextColor               string   `protobuf:"bytes,30,opt,name=profile_text_color,json=profileTextColor,proto3" json:"profile_text_color,omitempty"`
	ProfileUseBackgroundImage      bool     `protobuf:"varint,31,opt,name=profile_use_background_image,json=profileUseBackgroundImage,proto3" json:"profile_use_background_image,omitempty"`
	ProfileImageUrl                string   `protobuf:"bytes,32,opt,name=profile_image_url,json=profileImageUrl,proto3" json:"profile_image_url,omitempty"`
	ProfileImageUrlHttps           string   `protobuf:"bytes,33,opt,name=profile_image_url_https,json=profileImageUrlHttps,proto3" json:"profile_image_url_https,omitempty"`
	ProfileBannerUrl               string   `protobuf:"bytes,34,opt,name=profile_banner_url,json=profileBannerUrl,proto3" json:"profile_banner_url,omitempty"`
	DefaultProfile                 bool     `protobuf:"varint,35,opt,name=default_profile,json=defaultProfile,proto3" json:"default_profile,omitempty"`
	DefaultProfileImage            bool     `protobuf:"varint,36,opt,name=default_profile_image,json=defaultProfileImage,proto3" json:"default_profile_image,omitempty"`
	Following                      string   `protobuf:"bytes,37,opt,name=following,proto3" json:"following,omitempty"`
	FollowRequestSent              string   `protobuf:"bytes,38,opt,name=follow_request_sent,json=followRequestSent,proto3" json:"follow_request_sent,omitempty"`
	Notifications                  string   `protobuf:"bytes,39,opt,name=notifications,proto3" json:"notifications,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_1da87516ade369a4, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetScreenName() string {
	if m != nil {
		return m.ScreenName
	}
	return ""
}

func (m *User) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *User) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *User) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *User) GetTranslatorType() string {
	if m != nil {
		return m.TranslatorType
	}
	return ""
}

func (m *User) GetProtected() bool {
	if m != nil {
		return m.Protected
	}
	return false
}

func (m *User) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *User) GetFollowersCount() int32 {
	if m != nil {
		return m.FollowersCount
	}
	return 0
}

func (m *User) GetFriendsCount() int32 {
	if m != nil {
		return m.FriendsCount
	}
	return 0
}

func (m *User) GetListedCount() int32 {
	if m != nil {
		return m.ListedCount
	}
	return 0
}

func (m *User) GetFavouritesCount() int32 {
	if m != nil {
		return m.FavouritesCount
	}
	return 0
}

func (m *User) GetStatusesCount() int32 {
	if m != nil {
		return m.StatusesCount
	}
	return 0
}

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User) GetUtcOffset() string {
	if m != nil {
		return m.UtcOffset
	}
	return ""
}

func (m *User) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

func (m *User) GetGeoEnabled() bool {
	if m != nil {
		return m.GeoEnabled
	}
	return false
}

func (m *User) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *User) GetContributorsEnabled() bool {
	if m != nil {
		return m.ContributorsEnabled
	}
	return false
}

func (m *User) GetIsTranslator() bool {
	if m != nil {
		return m.IsTranslator
	}
	return false
}

func (m *User) GetProfileBackgroundColor() string {
	if m != nil {
		return m.ProfileBackgroundColor
	}
	return ""
}

func (m *User) GetProfileBackgroundImageUrl() string {
	if m != nil {
		return m.ProfileBackgroundImageUrl
	}
	return ""
}

func (m *User) GetProfileBackgroundImageUrlHttps() string {
	if m != nil {
		return m.ProfileBackgroundImageUrlHttps
	}
	return ""
}

func (m *User) GetProfileBackgroundTile() bool {
	if m != nil {
		return m.ProfileBackgroundTile
	}
	return false
}

func (m *User) GetProfileLinkColor() string {
	if m != nil {
		return m.ProfileLinkColor
	}
	return ""
}

func (m *User) GetProfileSidebarBorderColor() string {
	if m != nil {
		return m.ProfileSidebarBorderColor
	}
	return ""
}

func (m *User) GetProfileSidebarFillColor() string {
	if m != nil {
		return m.ProfileSidebarFillColor
	}
	return ""
}

func (m *User) GetProfileTextColor() string {
	if m != nil {
		return m.ProfileTextColor
	}
	return ""
}

func (m *User) GetProfileUseBackgroundImage() bool {
	if m != nil {
		return m.ProfileUseBackgroundImage
	}
	return false
}

func (m *User) GetProfileImageUrl() string {
	if m != nil {
		return m.ProfileImageUrl
	}
	return ""
}

func (m *User) GetProfileImageUrlHttps() string {
	if m != nil {
		return m.ProfileImageUrlHttps
	}
	return ""
}

func (m *User) GetProfileBannerUrl() string {
	if m != nil {
		return m.ProfileBannerUrl
	}
	return ""
}

func (m *User) GetDefaultProfile() bool {
	if m != nil {
		return m.DefaultProfile
	}
	return false
}

func (m *User) GetDefaultProfileImage() bool {
	if m != nil {
		return m.DefaultProfileImage
	}
	return false
}

func (m *User) GetFollowing() string {
	if m != nil {
		return m.Following
	}
	return ""
}

func (m *User) GetFollowRequestSent() string {
	if m != nil {
		return m.FollowRequestSent
	}
	return ""
}

func (m *User) GetNotifications() string {
	if m != nil {
		return m.Notifications
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "notifier.src.twitter.User")
}

func init() { proto.RegisterFile("notifier/src/twitter/user.proto", fileDescriptor_1da87516ade369a4) }

var fileDescriptor_1da87516ade369a4 = []byte{
	// 796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0xdd, 0x6f, 0x23, 0x35,
	0x10, 0x57, 0xae, 0x1f, 0x34, 0xd3, 0x7c, 0xb4, 0x6e, 0xd3, 0xfa, 0x7a, 0xbd, 0x6b, 0xae, 0xbd,
	0xa3, 0x05, 0xa1, 0x46, 0x80, 0x40, 0x48, 0x3c, 0x20, 0x7a, 0x02, 0x01, 0x42, 0x80, 0xd2, 0xf6,
	0xe5, 0x5e, 0x56, 0x9b, 0xdd, 0xd9, 0x60, 0xd5, 0xb5, 0x83, 0x3d, 0x7b, 0x1f, 0xfc, 0x6d, 0xfc,
	0x71, 0xc8, 0xe3, 0xdd, 0x4d, 0x93, 0x1c, 0xbc, 0xd9, 0xbf, 0x8f, 0x19, 0xcf, 0x8c, 0x77, 0x0d,
	0x27, 0xc6, 0x92, 0x2a, 0x14, 0xba, 0x91, 0x77, 0xd9, 0x88, 0xde, 0x2a, 0x22, 0x74, 0xa3, 0xd2,
	0xa3, 0xbb, 0x9c, 0x39, 0x4b, 0x56, 0xec, 0xd7, 0x82, 0x4b, 0xef, 0xb2, 0xcb, 0x4a, 0x70, 0xfa,
	0x4f, 0x07, 0xd6, 0x6f, 0x3d, 0x3a, 0xd1, 0x83, 0x47, 0x2a, 0x97, 0xad, 0x61, 0xeb, 0x62, 0x6d,
	0xfc, 0x48, 0xe5, 0x62, 0x00, 0x9b, 0x2a, 0x4f, 0x3c, 0x39, 0xf9, 0x68, 0xd8, 0xba, 0x68, 0x8f,
	0x37, 0x54, 0x7e, 0x4d, 0x4e, 0x08, 0x58, 0x37, 0xe9, 0x3d, 0xca, 0x35, 0x06, 0x79, 0x2d, 0x4e,
	0x60, 0xdb, 0x67, 0x0e, 0xd1, 0x24, 0x4c, 0xad, 0x33, 0x05, 0x11, 0xfa, 0x2d, 0x08, 0x8e, 0x60,
	0x4b, 0xdb, 0x2c, 0x25, 0x65, 0x8d, 0xdc, 0x60, 0xb6, 0xd9, 0x8b, 0x1d, 0x58, 0x2b, 0x9d, 0x96,
	0x9b, 0x0c, 0x87, 0xa5, 0x18, 0xc2, 0x76, 0x8e, 0x3e, 0x73, 0x6a, 0xc6, 0x86, 0x8f, 0x98, 0x79,
	0x08, 0x89, 0x73, 0xe8, 0x93, 0x4b, 0x8d, 0xd7, 0x29, 0x59, 0x97, 0xd0, 0xfb, 0x19, 0xca, 0x2d,
	0x56, 0xf5, 0xe6, 0xf0, 0xcd, 0xfb, 0x19, 0x8a, 0x63, 0x68, 0x87, 0xe2, 0x31, 0x23, 0xcc, 0x65,
	0x7b, 0xd8, 0xba, 0xd8, 0x1a, 0xcf, 0x81, 0x70, 0xac, 0x37, 0xe8, 0x42, 0x4f, 0x72, 0x09, 0x4c,
	0x36, 0xfb, 0x90, 0xa2, 0xb0, 0x5a, 0xdb, 0xb7, 0xe8, 0x7c, 0x92, 0xd9, 0xd2, 0x90, 0xdc, 0x1e,
	0xb6, 0x2e, 0x36, 0xc6, 0xbd, 0x06, 0x7e, 0x15, 0x50, 0x71, 0x06, 0xdd, 0xc2, 0x29, 0x34, 0x79,
	0x2d, 0xeb, 0xb0, 0xac, 0x53, 0x81, 0x51, 0xf4, 0x1c, 0x3a, 0x5a, 0x79, 0xc2, 0xbc, 0xd2, 0x74,
	0x59, 0xb3, 0x1d, 0xb1, 0x28, 0xf9, 0x04, 0x76, 0x8a, 0xf4, 0x8d, 0x2d, 0x9d, 0x22, 0xac, 0x43,
	0xf5, 0x58, 0xd6, 0x9f, 0xe3, 0x51, 0xfa, 0x12, 0x7a, 0x9e, 0x52, 0x2a, 0x7d, 0x23, 0xec, 0xb3,
	0xb0, 0x5b, 0xa3, 0x51, 0xf6, 0x14, 0x20, 0x73, 0x98, 0x86, 0xac, 0x29, 0xc9, 0x1d, 0x6e, 0x50,
	0xbb, 0x42, 0xbe, 0x67, 0xba, 0xa4, 0x2c, 0xb1, 0x45, 0xe1, 0x91, 0xe4, 0x6e, 0xa4, 0x4b, 0xca,
	0x7e, 0x67, 0x40, 0x3c, 0x81, 0x36, 0xa9, 0x7b, 0x4c, 0xfe, 0xb6, 0x06, 0xa5, 0x88, 0x43, 0x0b,
	0xc0, 0x6b, 0x6b, 0x78, 0xe2, 0x53, 0xb4, 0x09, 0x9a, 0x74, 0xa2, 0x31, 0x97, 0x7b, 0xdc, 0x3c,
	0x98, 0xa2, 0xfd, 0x21, 0x22, 0xe1, 0x9a, 0xe8, 0xd4, 0x4c, 0xe5, 0x7e, 0xbc, 0x26, 0x61, 0x2d,
	0x3e, 0x87, 0xfd, 0xcc, 0x1a, 0x72, 0x6a, 0x52, 0x92, 0x75, 0xbe, 0x71, 0x0f, 0xd8, 0xbd, 0xf7,
	0x90, 0xab, 0xc3, 0x9c, 0x41, 0x57, 0xf9, 0x64, 0x3e, 0x54, 0x79, 0xc0, 0xda, 0x8e, 0xf2, 0x37,
	0x0d, 0x26, 0xbe, 0x01, 0x39, 0x73, 0xb6, 0x50, 0x1a, 0x93, 0x49, 0x9a, 0xdd, 0x4d, 0x9d, 0x2d,
	0x4d, 0x68, 0xb4, 0xb6, 0x4e, 0x1e, 0x72, 0xfe, 0x83, 0x8a, 0xbf, 0x6a, 0xe8, 0x57, 0x81, 0x15,
	0xdf, 0xc1, 0xf1, 0x07, 0x9c, 0xea, 0x3e, 0x9d, 0x62, 0x12, 0x2e, 0xa5, 0x64, 0xf7, 0xe3, 0x15,
	0xf7, 0xcf, 0x41, 0x71, 0xeb, 0xb4, 0xf8, 0x05, 0x4e, 0xff, 0x2f, 0x40, 0xf2, 0x27, 0xd1, 0xcc,
	0xcb, 0xc7, 0x1c, 0xe6, 0xd9, 0x7f, 0x86, 0xf9, 0x29, 0xa8, 0xc4, 0xd7, 0x70, 0xf8, 0x81, 0x58,
	0xa4, 0x34, 0xca, 0x23, 0xae, 0x7a, 0xb0, 0x12, 0xe0, 0x46, 0x69, 0x14, 0x9f, 0x81, 0xa8, 0x7d,
	0x5a, 0x99, 0xbb, 0xaa, 0xf0, 0x27, 0x9c, 0x73, 0xa7, 0x62, 0x7e, 0x55, 0xe6, 0x6e, 0xa5, 0x64,
	0xaf, 0x72, 0x9c, 0xa4, 0x2e, 0x99, 0x58, 0x97, 0xa3, 0xab, 0x7c, 0xc7, 0x0b, 0x25, 0x5f, 0x47,
	0xc9, 0x15, 0x2b, 0x62, 0x80, 0x6f, 0xe1, 0x68, 0x39, 0x40, 0xa1, 0xb4, 0xae, 0xec, 0x4f, 0xd9,
	0x7e, 0xb8, 0x68, 0xff, 0x51, 0x69, 0x1d, 0xcd, 0x0f, 0xce, 0x4a, 0xf8, 0x8e, 0x2a, 0xd3, 0xb3,
	0x85, 0xb3, 0xde, 0xe0, 0x3b, 0x5a, 0x39, 0x6b, 0xe9, 0x57, 0x3b, 0x2c, 0x4f, 0xb8, 0x2d, 0xf5,
	0x59, 0x6f, 0xfd, 0x72, 0x6b, 0xc5, 0xa7, 0xb0, 0x5b, 0x07, 0x98, 0x0f, 0x75, 0xc8, 0xd9, 0xfa,
	0x15, 0xd1, 0x8c, 0xf2, 0xab, 0x79, 0xfb, 0x97, 0xe7, 0xf7, 0x9c, 0x1d, 0xfb, 0x4b, 0x8e, 0x38,
	0xb5, 0x07, 0x15, 0x4d, 0x52, 0x63, 0xd0, 0x71, 0x8e, 0xd3, 0x85, 0x8a, 0xae, 0x98, 0x08, 0x49,
	0xce, 0xa1, 0x9f, 0x63, 0x91, 0x96, 0x9a, 0x92, 0x8a, 0x93, 0x67, 0x5c, 0x44, 0xaf, 0x82, 0xff,
	0x88, 0xa8, 0xf8, 0x02, 0x06, 0x4b, 0xc2, 0xaa, 0xe6, 0x17, 0xf1, 0x63, 0x59, 0x94, 0xc7, 0x6a,
	0x8f, 0xa1, 0x1d, 0xff, 0x4d, 0xca, 0x4c, 0xe5, 0xcb, 0xf8, 0x3d, 0x37, 0x80, 0xb8, 0x84, 0xbd,
	0xb8, 0x49, 0x1c, 0xfe, 0x55, 0xa2, 0xa7, 0xc4, 0xa3, 0x21, 0xf9, 0x31, 0xeb, 0x76, 0x23, 0x35,
	0x8e, 0xcc, 0x35, 0x1a, 0x12, 0x2f, 0xa0, 0x1b, 0x1f, 0x8c, 0xf8, 0x9f, 0xf6, 0xf2, 0x9c, 0x95,
	0x8b, 0xe0, 0xd5, 0x08, 0x0e, 0xc2, 0x6b, 0x72, 0x9f, 0x2a, 0x13, 0x9f, 0x99, 0xfa, 0x61, 0x79,
	0x3d, 0x98, 0xba, 0x59, 0x36, 0x6a, 0x1e, 0xa5, 0x0a, 0x9e, 0x6c, 0xb2, 0xea, 0xcb, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x14, 0xb4, 0x8d, 0xb2, 0xaf, 0x06, 0x00, 0x00,
}
